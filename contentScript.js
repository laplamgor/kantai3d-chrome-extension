var firstHref = $("a[href^='http']").eq(0).attr("href");

console.log("---------------------------" + window.self.location);

$('body').prepend("<script>" +
    // this is same script in index.js but minified and scaped
    "var xhr=new XMLHttpRequest;function patchMainJs(n){return(n=(n=(n=(n=(n=(n=(n=(n=(n=n.toString()).replace(\/(return .{0,99}\\!\\=.{0,99}\\|\\|null\\!\\=\\(.{0,99}\\=.{0,99}\\(.{0,99}\\)\\)&&\\(.{0,99}\\=\'_\'\\+.{0,99}\\),.{0,99}\\+\\(.{0,99}\\+.{0,99}\\+\'\\\/\'\\+\\(.{0,99}\\+.{0,99}\\(.{0,99},.{0,99}\\)\\)\\+\'_\'\\+.{0,99}\\+.{0,99}\\+.{0,99}\\+.{0,99}\\(0x0,parseInt\\(.{0,99}\\)\\)\\);)\/g,\"\\n return window.displacementPath = (function () {\\n$1\\n})();\\n\")).replace(\/(new PIXI\\[.{0,99}\\]\\(.{0,99}\\[.{0,99}\\]\\[.{0,99}\\],.{0,99},.{0,99}\\);document)\/g,\"\\n window.pixiApp = $1\")).replace(\/(\\=[^=]{0,99}\\[[^\\[]{0,99}\\]\\[[^\\[]{0,99}\\]\\([^\\(]{0,99}\\),[^,]{0,99}\\=0x0\\=\\=.{0,99}\\?0x0\\:.{0,99},.{0,99}\\=.{0,99}\\[.{0,99}\\]\\[.{0,99}\\]\\[.{0,99}\\]\\(.{0,99}\\);)\/g,\"\\n = window.charar $1\")).replace(\/(var .{0,99}\\=new PIXI\\[\\(.{0,99}\\)\\]\\(.{0,99}\\);this\\[.{0,99}\\]\\=.{0,99}\\[.{0,99}\\]\\[.{0,99}\\]\\[.{0,99}\\]\\[.{0,99}\\]\\[.{0,99}\\]\\(.{0,99}\\),this\\[.{0,99}\\]\\[.{0,99}]\\[.{0,99}\\]\\(.{0,99},\\-.{0,99}\\);var [^=]{0,99}=)\/g,\"$1 window.charal = \\n\")).replace(\/(\\=[^=]{0,99}\\[[^=]{0,99}\\]\\[[^=]{0,99}\\]\\[.{0,99}\\]\\[.{0,99}\\]\\(.{0,99}\\)\\[.{0,99}\\]\\(.{0,99}\\);this\\[.{0,99}\\]\\[.{0,99}\\]\\[.{0,99}\\]\\(\\-.{0,99}\\+.{0,99}\\[\'x\'\\]\\+.{0,99},\\-.{0,99}\\+.{0,99}\\[\'y\'\\]\\),)\/g,\"\\n = window.charah $1\")).replace(\/(\\[\'y\'\\]\\),this\\[.{0,99}\\(\'.{0,99}\'\\)\\]\\[.{0,99}\\(\'.{0,99}\'\\)\\]\\(.{0,99}\\+.{0,99},.{0,99}\\-.{0,99}\\);)\/g,\"$1 \\nwindow.portOffset = -window.charal + window.charah.x;\/\/-l+h.x\\nwindow.portOffsetR = window.charar;\/\/r\\n\\nwindow.displacementSprite = PIXI.Sprite.fromImage(\'https:\/\/kantai3d.com\/\'+ window.displacementPath );\\nwindow.displacementFilter = PIXI.DepthPerspectiveFilter;\\n\\nwindow.displacementFilter.uniforms.textureWidth = this._chara.texture.width;\\nwindow.displacementFilter.uniforms.textureHeight = this._chara.texture.height;\\nwindow.displacementFilter.padding = 0;\\n\\n\\nwindow.displacementSprite.visible = false;\\n\\nwindow.displacementFilter.padding = 150;\\n\\nwindow.currenctChara = this._chara;\\n\\nif (window.displacementSprite.width != 1) {\\n    \/\/ The depth map is already loaded\\n    window.displacementFilter.uniforms.displacementMap = window.displacementSprite.texture;\\n    window.displacementFilter.uniforms.scale = 1.0;\\n    window.displacementFilter.uniforms.focus = 0.5;\\n    window.displacementFilter.uniforms.offset = [0.0, 0.0];\\n    window.currenctChara.filters = [window.displacementFilter];\\n    window.currenctChara.addChild(window.displacementSprite);\\n} else {\\n    \/\/ The depth map is not loaded yet, and may not exist in server at all\\n    \/\/ Disable the filter first\\n    this._chara.filters = [];\\n    window.currenctChara.filters = [];\\n    window.displacementSprite.texture.baseTexture.on(\'loaded\', function(){\\n        \/\/ Re-enable the filter when resource loaded\\n        window.displacementFilter.uniforms.displacementMap = window.displacementSprite.texture;\\n        window.displacementFilter.uniforms.scale = 1.0;\\n        window.displacementFilter.uniforms.focus = 0.5;\\n        window.displacementFilter.uniforms.offset = [0.0, 0.0];\\n        window.currenctChara.filters = [window.displacementFilter];\\n        window.currenctChara.addChild(window.displacementSprite);\\n    });\\n}\\n\")).replace(\/(\\=Math\\[.{0,99}\\]\\(.{0,99}\\),.{0,99}\\=0x1\\+0\\.012\\*\\(0\\.5\\+0\\.5\\*.{0,99}\\);this\\[.{0,99}\\]\\[.{0,99}\\]\\(.{0,99}\\),)\/g,\"\\n = window.charasin $1\")).replace(\/(this\\[\'y\'\\]=this\\[.{0,99}\\(\'.{0,99}\'\\)]-1.5\\*.{0,99}\\*1.8;)\/g,\"$1\\nvar mousex = (window.pixiApp.renderer.plugins.interaction.mouse.global.x\/1200.0-0.5);\\nvar mousey = (window.pixiApp.renderer.plugins.interaction.mouse.global.y\/720.0-0.5);\\n\\nwindow.displacementFilter.uniforms.textureScale = this.scale.x;\\n\\nvar flip = (this.parent._chara.transform.position.x - window.portOffset) \/ (window.portOffsetR) - 0.5;\\nwindow.displacementFilter.uniforms.offset = [flip * mousex *1.3\\n,0.02 * window.charasin - 0.01 + mousey * 0.6];\\n\\n\"))+\";\\n\\n\'use strict\';\\nPIXI.DepthPerspectiveFilter = new PIXI.Filter(`\"+vert+\"`, `\"+frag+\'`);\\n\\nPIXI.DepthPerspectiveFilter.apply = function(filterManager, input, output)\\n{\\n  this.uniforms.dimensions = {};\\n  this.uniforms.dimensions[0] = input.sourceFrame.width;\\n  this.uniforms.dimensions[1] = input.sourceFrame.height;\\n\\n  this.uniforms.padding = this.padding;\\n  \\n  this.uniforms.frameWidth = input.size.width;\\n  this.uniforms.frameHeight = input.size.height;\\n\\n  \/\/ draw the filter...\\n  filterManager.applyFilter(this, input, output);\\n}\\n\\n\\n\/\/ var isloaded = false;\\n\/\/   var alpha    = 0;\\n\/\/   var beta     = 0;\\n\/\/   var gamma    = 0;\\n\\n\\n\/\/ window.addEventListener(\"deviceorientation\", handleOrientation, true);\\n\\n\/\/ function handleOrientation(e) {\\n\/\/   if (!isloaded) {\\n\/\/     alpha = e.alpha;\\n\/\/     beta = e.beta;\\n\/\/     gamma = e.gamma;\\n\/\/     isloaded = true;\\n\/\/    }\\n\/\/   console.log(\"ha\" + e.alpha);\\n\\n\/\/   if (window.displacementFilter && window.displacementFilter.uniforms && window.displacementFilter.uniforms.offset) {\\n\/\/     window.displacementFilter.uniforms.offset =  [(window.displacementFilter.uniforms.offset[0] + (e.alpha - alpha)\/180.0) * 0.5, \\n\/\/     (window.displacementFilter.uniforms.offset[1] + (e.beta - beta)\/180.0) * 0.5];\\n\\n\/\/     console.log((window.displacementFilter.uniforms.offset[0] + (e.alpha - alpha)\/180.0) * 0.5);\\n\/\/   }\\n\/\/   alpha = e.alpha;\\n\/\/   beta = e.beta;\\n\/\/   gamma = e.gamma;\\n\/\/ }\\n\'}xhr.open(\"GET\",\".\/js\/main.js\",!0),xhr.onreadystatechange=(()=>{xhr.readyState===XMLHttpRequest.DONE&&200===xhr.status&&(result=xhr.responseText,patchedMainJs=patchMainJs(result),eval(patchedMainJs),KCS.init())}),xhr.send();let frag=\"precision mediump float;\\nuniform vec2 offset;\\n\\n\\n\\n\\nuniform sampler2D uSampler;\\nuniform sampler2D displacementMap;\\n\\nuniform float textureScale;\\n\\nuniform float textureWidth;\\nuniform float textureHeight;\\nuniform float frameWidth;\\nuniform float frameHeight;\\n\\nuniform float padding;\\nuniform vec4 filterArea;\\nuniform vec4 filterClamp;\\n\\n\\nvarying vec2 vTextureCoord;\\nvarying vec4 vColor;\\nuniform vec4 dimensions;\\nuniform vec2 mapDimensions;\\nuniform float scale;\\nuniform float focus;\\n\\n\\nvec2 mapCoordDepth(vec2 coord)\\n{\\n    return vec2((coord[0] * frameWidth - padding) \/ textureWidth \/ textureScale,\\n                (coord[1] * frameHeight - padding) \/ textureHeight \/ textureScale);\\n}\\n\\nvec2 mapCoord2(vec2 coord)\\n{\\n    return vec2(coord[0] * frameWidth \/ textureWidth \/ textureScale,\\n                coord[1] * frameHeight \/ textureHeight \/ textureScale);\\n}\\n\\nconst float compression = 1.0;\\nconst float dmin = 0.0;\\nconst float dmax = 1.0;\\n\\n#define MAXSTEPS 600.0\\nfloat steps = max(MAXSTEPS *length(offset), 30.0);\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nvoid main(void)\\n{\\n\\n    float aspect = dimensions.x \/ dimensions.y;\\n    vec2 scale2 =\\n        vec2(scale * min(1.0, 1.0 \/ aspect), scale * min(1.0, aspect)) * vec2(1, -1);\\n    mat2 baseVector =\\n        mat2(vec2((0.5 - focus) * (offset) - (offset) \/ 2.0) * scale2,\\n             vec2((0.5 - focus) * (offset) + (offset) \/ 2.0) * scale2);\\n\\n    vec2 pos = (vTextureCoord);\\n    mat2 vector = baseVector;\\n\\n    float dstep = compression \/ (steps - 1.0);\\n    vec2 vstep = (vector[1] - vector[0]) \/ vec2((steps - 1.0));\\n\\n    vec2 posSumLast = vec2(0.0);\\n    vec2 posSum = vec2(0.0);\\n\\n    float weigth = 1.0;\\n    float dpos;\\n    float dposLast;\\n\\n    for (float i = 0.0; i < MAXSTEPS; ++i)\\n    {\\n        vec2 vpos = pos + vector[1] - i * vstep;\\n        dpos = 1.0 - i * dstep;\\n        float depth = texture2D(displacementMap, mapCoordDepth(vpos)).r;\\n\\n\\n        if (texture2D(uSampler, vpos)[3] == 0.0)\\n        {\\n            depth = 0.0;\\n        }\\n\\n        depth = clamp(depth, dmin, dmax);\\n\\n        if (dpos > depth)\\n        {\\n            posSumLast = vpos;\\n            dposLast = dpos;\\n        }\\n        else\\n        {\\n            posSum = vpos;\\n            weigth = (depth - dposLast) \/ dstep;\\n            break;\\n        }\\n    };\\n\\n    gl_FragColor = texture2D(\\n                       uSampler,\\n                       (posSum - posSumLast) * -clamp(weigth * 0.5 + 0.5, 0.0, 1.5) + posSum);\\n\\n}\",vert=\"#ifdef GL_ES\\nprecision highp float;\\n#endif\\n\\nattribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\nvarying vec2 vTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvoid main(void)\\n{\\n    vTextureCoord = aTextureCoord;\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n}\";"
    + "</script>");
